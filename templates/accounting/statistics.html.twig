{% extends 'base.html.twig' %}

{% block title %}Statistiques comptables - LOKAPRO{% endblock %}

{% block page_title %}
    <h5 class="mb-0">
        <i class="bi bi-graph-up me-2"></i>
        Statistiques comptables
    </h5>
{% endblock %}

{% block page_actions %}
    <a href="{{ path('app_accounting_index') }}" class="btn btn-outline-secondary btn-sm">
        <i class="bi bi-arrow-left me-2"></i>
        Retour à la comptabilité
    </a>
{% endblock %}

{% block body %}
    <!-- Statistiques globales -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted mb-2">Total Crédits</h6>
                    <h3 class="text-success mb-0">+{{ (stats.total_credits ?? 0)|currency }}</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted mb-2">Total Débits</h6>
                    <h3 class="text-danger mb-0">-{{ (stats.total_debits ?? 0)|currency }}</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted mb-2">Solde Actuel</h6>
                    {% set balance = (stats.balance ?? stats.current_balance ?? 0) %}
                    <h3 class="{{ balance >= 0 ? 'text-success' : 'text-danger' }} mb-0">
                        {{ balance|currency }}
                    </h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted mb-2">Total Écritures</h6>
                    <h3 class="text-info mb-0">{{ stats.total_entries ?? 0 }}</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Graphique évolution mensuelle -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header" style="background-color: var(--primary-color); color: white;">
                    <h6 class="mb-0">
                        <i class="bi bi-graph-up me-2"></i>
                        Évolution sur 12 mois
                    </h6>
                </div>
                <div class="card-body">
                    <canvas id="monthlyChart" height="80"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Tableau détaillé -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header" style="background-color: var(--primary-color); color: white;">
                    <h6 class="mb-0">
                        <i class="bi bi-table me-2"></i>
                        Détails mensuels
                    </h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Mois</th>
                                    <th class="text-end">Crédits</th>
                                    <th class="text-end">Débits</th>
                                    <th class="text-end">Résultat</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for data in monthly_data %}
                                <tr>
                                    <td><strong>{{ data.month }}</strong></td>
                                    <td class="text-end text-success">+{{ data.credits|currency }}</td>
                                    <td class="text-end text-danger">-{{ data.debits|currency }}</td>
                                    <td class="text-end">
                                        <strong class="{{ data.net >= 0 ? 'text-success' : 'text-danger' }}">
                                            {{ data.net >= 0 ? '+' : '' }}{{ data.net|currency }}
                                        </strong>
                                    </td>
                                </tr>
                                {% endfor %}
                            </tbody>
                            <tfoot>
                                <tr class="fw-bold">
                                    <td>TOTAL</td>
                                    <td class="text-end text-success">
                                        +{{ monthly_data|reduce((carry, data) => carry + data.credits, 0)|currency }}
                                    </td>
                                    <td class="text-end text-danger">
                                        -{{ monthly_data|reduce((carry, data) => carry + data.debits, 0)|currency }}
                                    </td>
                                    <td class="text-end">
                                        {% set total = monthly_data|reduce((carry, data) => carry + data.net, 0) %}
                                        <strong class="{{ total >= 0 ? 'text-success' : 'text-danger' }}">
                                            {{ total >= 0 ? '+' : '' }}{{ total|currency }}
                                        </strong>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .card-header {
            font-weight: 600;
        }

        .text-success {
            color: #198754 !important;
        }

        .text-danger {
            color: #dc3545 !important;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ctx = document.getElementById('monthlyChart').getContext('2d');

            const monthlyData = {{ monthly_data|json_encode|raw }};

            const labels = monthlyData.map(d => d.month);
            const credits = monthlyData.map(d => d.credits);
            const debits = monthlyData.map(d => d.debits);
            const net = monthlyData.map(d => d.net);

            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Crédits',
                            data: credits,
                            borderColor: '#198754',
                            backgroundColor: 'rgba(25, 135, 84, 0.1)',
                            tension: 0.3
                        },
                        {
                            label: 'Débits',
                            data: debits,
                            borderColor: '#dc3545',
                            backgroundColor: 'rgba(220, 53, 69, 0.1)',
                            tension: 0.3
                        },
                        {
                            label: 'Résultat Net',
                            data: net,
                            borderColor: '#0d6efd',
                            backgroundColor: 'rgba(13, 110, 253, 0.1)',
                            tension: 0.3,
                            borderWidth: 2
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed.y !== null) {
                                        label += new Intl.NumberFormat('fr-FR', {
                                            style: 'currency',
                                            currency: 'XOF'
                                        }).format(context.parsed.y);
                                    }
                                    return label;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return new Intl.NumberFormat('fr-FR', {
                                        style: 'currency',
                                        currency: 'XOF',
                                        minimumFractionDigits: 0
                                    }).format(value);
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
{% endblock %}

