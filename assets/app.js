import './bootstrap.js';
/*
 * Welcome to your app's main JavaScript file!
 *
 * This file will be included onto the page via the importmap() Twig function,
 * which should already be in your base.html.twig.
 */
import './styles/app.css';

// Configuration Turbo pour Ã©viter les problÃ¨mes de cache
import { Turbo } from '@hotwired/turbo';

// Configuration Turbo pour forcer le rafraÃ®chissement des donnÃ©es
Turbo.session.drive = true;

// DÃ©sactiver le cache pour les requÃªtes AJAX
Turbo.session.cache = false;

// Forcer le rechargement des pages aprÃ¨s certaines actions
document.addEventListener('turbo:before-fetch-request', (event) => {
    // Ajouter un timestamp pour Ã©viter le cache
    const url = new URL(event.detail.url);
    url.searchParams.set('_t', Date.now());
    event.detail.url = url.toString();
});

// RafraÃ®chir automatiquement aprÃ¨s les actions de modification
document.addEventListener('turbo:before-fetch-response', (event) => {
    const response = event.detail.fetchResponse;
    if (response.succeeded && response.statusCode === 200) {
        // VÃ©rifier si c'est une action de modification (POST, PUT, DELETE)
        const method = event.detail.fetchOptions?.method;
        if (method && ['POST', 'PUT', 'DELETE', 'PATCH'].includes(method)) {
            // Forcer le rechargement de la page aprÃ¨s 500ms
            setTimeout(() => {
                window.location.reload();
            }, 500);
        }
    }
});

// GÃ©rer les erreurs de cache
document.addEventListener('turbo:fetch-request-error', (event) => {
    console.warn('Erreur de requÃªte Turbo:', event.detail);
    // Recharger la page en cas d'erreur
    window.location.reload();
});

// DÃ©sactiver Turbo pour certains formulaires qui nÃ©cessitent un rechargement complet
document.addEventListener('DOMContentLoaded', () => {
    // DÃ©sactiver Turbo pour les formulaires de modification critiques
    const criticalForms = document.querySelectorAll('form[data-turbo="false"]');
    criticalForms.forEach(form => {
        form.addEventListener('submit', (e) => {
            // Forcer le rechargement aprÃ¨s soumission
            setTimeout(() => {
                window.location.reload();
            }, 1000);
        });
    });
});

console.log('Configuration Turbo optimisÃ©e chargÃ©e ! ðŸš€');
